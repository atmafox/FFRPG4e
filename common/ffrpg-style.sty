\ProvidesPackage{ffrpg-style}

\RequirePackage{geometry}
\RequirePackage[table,xcdraw,svgnames,dvipsnames]{xcolor}
\RequirePackage{fontspec}
\RequirePackage{graphicx}
\RequirePackage{multicol}
\RequirePackage[inline]{enumitem}
\RequirePackage{fancyhdr}
\RequirePackage{titlesec}
\RequirePackage{placeins}
\RequirePackage{xstring}
\RequirePackage{numprint}
\RequirePackage{collcell}
%\RequirePackage[all]{nowidow}
\RequirePackage{newunicodechar}
\RequirePackage{booktabs}
\RequirePackage{adjustbox}
\RequirePackage{indentfirst}
\RequirePackage{keyreader}
\RequirePackage{fmtcount}
\RequirePackage{calc}
\RequirePackage{csquotes}
\RequirePackage{etoolbox}
\RequirePackage{wrapfig}
\RequirePackage{longtable}
\RequirePackage{tikz}
\RequirePackage[pdfversion=1.5,colorlinks=true,linkcolor=NavyBlue,bookmarksopen=true,colorlinks,pdfa]{hyperref}
\RequirePackage[open,openlevel=2,atend]{bookmark}
\RequirePackage{url}

% We'll need @ for keyval templates in here
\makeatletter

\bookmarksetup{}

% Configure numprint separator and create custom numprint macro
\npthousandsep{,}
\newcommand{\tabnumprint}[1]{\IfInteger{#1}{\numprint{#1}}{#1}}

\newcolumntype{M}{>{\collectcell\tabnumprint}r<{\endcollectcell}}
\newcolumntype{D}{>{\collectcell\tabnumprint}c<{\endcollectcell}}
\newcolumntype{O}{>{\collectcell\tabnumprint}l<{\endcollectcell}}

% Stolen from https://tex.stackexchange.com/a/62623
\newlist{commalist}{description*}{4}
\setlist[commalist]{mode=unboxed,itemjoin={{,}},itemjoin*={{, and}},afterlabel=\unskip{{~}}}

% configure page geometry
\geometry{
  letterpaper,
  top=0.65in,
  left=0.5in,
  right=0.5in,
  bottom=0.25in,
  footskip=40pt,
  includefoot
}

% Get our fonts set up, ferrum is missing styles so fake them
\providefontfamily\ferrum{ferrum.otf}[
	Path			= ../common/font/,
	AutoFakeSlant	= 0.2,
	AutoFakeBold	= 1.5 ]
\providefontfamily\arabtype{arabtype.ttf}[
	Path			= ../common/font/,
	AutoFakeSlant	= 0.2,
	AutoFakeBold	= 1.5 ]
\providefontfamily\yumin{yumin.ttf}[
	Path			= ../common/font/,
	AutoFakeSlant	= 0.2,
	AutoFakeBold	= 1.5 ]
\setmainfont{caladea}[
	Path = ../common/font/,
	Extension = .ttf,
	UprightFont = *-regular,
	BoldFont = *-bold,
	ItalicFont = *-italic,
	BoldItalicFont = *-bolditalic,
	]

	% Thunk the missing characters through to mainfont
	% So using ``, '', and \ldots will stay in the same font as currently
	% but using the literal form below it will fall back
	\newunicodechar{“}{{\rmfamily``}}
	\newunicodechar{”}{{\rmfamily''}}
	\newunicodechar{…}{{\rmfamily\ldots}}

% Colours for the two characters
\definecolor{mogred}{cmyk}{0, 0.78, 0.93, 0.55}
\definecolor{bocoblue}{cmyk}{0.95, 0.78, 0, 0.25}

% Colour for zebra table
\colorlet{zebragray}{gray!20}

% This is for leaving temporary inline comments about game mechanics that need clarification and that sort of thing. It should stand out badly but not be hard to read. It should probably also flag a warning in the console every time it's used.
\newcommand{\review}[1]{
	\bgroup\color{red}\textbf{((#1))}\egroup
}

% For prerelease dates

\def\datestamp{\leavevmode\hbox{\the\year-\twodigits\month-\twodigits\day}}
\def\twodigits#1{\ifnum#1<10 0\fi\the#1}

% Macro for the crystal images
\krddefinekeys{ffcrystal}[ffc@]{
	choice/type/invalid/
		invalid.do=\def\ffc@type{INVALID},
		earth.do=\def\ffc@type{Earth},
		air.do=\def\ffc@type{Air},
		water.do=\def\ffc@type{Water},
		fire.do=\def\ffc@type{Fire},
		level.do=\def\ffc@type{Level};
	cmd/height/10pt;
}
\krdpresetkeys{ffcrystal}{type=invalid}

% Created a new macro for namespace and to not break stuff
\newrobustcmd{\ffcrystal}[1][]{
	\krdsetkeys{ffcrystal}{#1}%
    \begingroup%
    \setbox0=\hbox{%
		\adjincludegraphics[valign=M,height=\ffc@height]{../img/common/crystal\ffc@type}%
	}\parbox{\wd0}{\box0}\endgroup%
}

% I want to make this verify the input, but for now... this works
\newcommand{\crystal}[2]{
  \adjincludegraphics[valign=M,height=#2]{../img/common/crystal#1.pdf}
}

% Element Roll -- will have crystal icons later

\krddefinekeys{roll}[rv@]{
	choice/off/invalid/
		invalid.do=\def\rv@off{INVALID},
		earth.do=\def\rv@off{Earth},
		air.do=\def\rv@off{Air},
		fire.do=\def\rv@off{Fire},
		water.do=\def\rv@off{Water};
	choice/def/invalid/
		invalid.do=\def\rv@def{INVALID},
		earth.do=\def\rv@def{Earth},
		air.do=\def\rv@def{Air},
		fire.do=\def\rv@def{Fire},
		water.do=\def\rv@def{Water};
	cmd/diff/;
}
\krdpresetkeys{roll}{off=invalid,def=invalid,diff=}

\newcommand{\roll}[1][]{
 	\krdsetkeys{roll}{#1}%
	\rv@off{} vs \rv@def{}\ifdefvoid{\rv@diff}{}{ (difficulty \rv@diff)}
}

\newcommand{\eve}[1]{\roll[off=earth,def=earth,diff=#1]}
\newcommand{\eva}[1]{\roll[off=earth,def=air,diff=#1]}
\newcommand{\evf}[1]{\roll[off=earth,def=fire,diff=#1]}
\newcommand{\evw}[1]{\roll[off=earth,def=water,diff=#1]}

\newcommand{\ave}[1]{\roll[off=air,def=earth,diff=#1]}
\newcommand{\ava}[1]{\roll[off=air,def=air,diff=#1]}
\newcommand{\avf}[1]{\roll[off=air,def=fire,diff=#1]}
\newcommand{\avw}[1]{\roll[off=air,def=water,diff=#1]}

\newcommand{\fve}[1]{\roll[off=fire,def=earth,diff=#1]}
\newcommand{\fva}[1]{\roll[off=fire,def=air,diff=#1]}
\newcommand{\fvf}[1]{\roll[off=fire,def=fire,diff=#1]}
\newcommand{\fvw}[1]{\roll[off=fire,def=water,diff=#1]}

\newcommand{\wve}[1]{\roll[off=water,def=earth,diff=#1]}
\newcommand{\wva}[1]{\roll[off=water,def=air,diff=#1]}
\newcommand{\wvf}[1]{\roll[off=water,def=fire,diff=#1]}
\newcommand{\wvw}[1]{\roll[off=water,def=water,diff=#1]}


% Types of terms
% Magic system
\newcommand{\tspell}[1]{\textit{#1}}
\newcommand{\tspellgroup}[1]{\textbf{#1}}
\newcommand{\tspellblue}[1]{\tspell{#1}}
% Character build pieces
\newcommand{\tability}[1]{\textbf{\textit{#1}}}
\newcommand{\tspec}[1]{\textit{#1}}
\newcommand{\taction}[1]{\textbf{!#1}}
\newcommand{\tsummon}[1]{\textbf{#1}}
\newcommand{\tperformance}[1]{\textbf{#1}}
\newcommand{\tquirk}[1]{\textbf{#1}}
\newcommand{\ttrait}[1]{#1}
\newcommand{\tjob}[1]{#1}
\newcommand{\tskill}[1]{\textbf{#1}}
% Equipment
\newcommand{\tequip}[1]{#1}
\newcommand{\titem}[1]{#1}
% Elements/damage types
\newcommand{\telem}[1]{#1}
% Attack classes
\newcommand{\tatk}[1]{#1}

% Optional rules
\newcommand{\toption}[1]{\textbf{#1}}

% Status types 
\newcommand{\tstatus}[1]{%
	\textbf{#1}%
}
\newcommand{\tvarstatus}[2]{%
	\textbf{#1} \textit{(#2)}%
}

\newcommand{\tstatustype}[1]{#1}

\newcommand{\teffect}[1]{#1}

\newcommand{\tfxedamage}[1]{\teffect{Elemental Damage}: \telem{#1}}

\newcommand{\tfxafocus}[1]{\teffect{Arcane Focus}: \tspell{#1}}
\newcommand{\tfxsweave}[1]{\teffect{Spell Weave}: \tspell{#1}}
\newcommand{\tfxdfocus}[2]{\tfxafocus{#1}\newline{}\tfxsweave{#2}}% dual focus
\newcommand{\tfxcritspell}[1]{\teffect{Critical Spell}: \tspell{#1}}

\newcommand{\tfxdestroyer}[1]{\teffect{Destroyer}: \tmtype{#1}}
\newcommand{\tfxkiller}[1]{\teffect{Killer}: \tmtype{#1}}

\newcommand{\tfxauto}[1]{\teffect{Auto}: \tstatus{#1}}
\newcommand{\tfxsos}[1]{\teffect{SOS}: \tstatus{#1}}
\newcommand{\tfximmunity}[1]{\teffect{Immunity}: \tstatus{#1}}
\newcommand{\tfxresistance}[1]{\teffect{Resistance}: \tstatus{#1}}
\newcommand{\tfxtouch}[1]{\teffect{Touch}: \tstatus{#1}}
\newcommand{\tfxstrike}[1]{\teffect{Strike}: \tstatus{#1}}

\newcommand{\tfxautov}[2]{\teffect{Auto}: \tvarstatus{#1}{#2}}
\newcommand{\tfxsosv}[2]{\teffect{SOS}: \tvarstatus{#1}{#2}}
\newcommand{\tfximmunityv}[2]{\teffect{Immunity}: \tvarstatus{#1}{#2}}
\newcommand{\tfxresistancev}[2]{\teffect{Resistance}: \tvarstatus{#1}{#2}}
\newcommand{\tfxtouchv}[2]{\teffect{Touch}: \tvarstatus{#1}{#2}}
\newcommand{\tfxstrikev}[2]{\teffect{Strike}: \tvarstatus{#1}{#2}}


\newcommand{\tfxtimmunity}[1]{\teffect{Immunity}: \tstatustype{#1}}
\newcommand{\tfxtresistance}[1]{\teffect{Resistance}: \tstatustype{#1}}

% Guuuh I don't feel like learning a new package just to make this work
% right now -wvr
\krddefinekeys{tfximmunityk}[ik@]{
	cmd/a;cmd/b;cmd/c;cmd/d;cmd/e;cmd/f;cmd/g;cmd/h
}

\krdpresetkeys{tfximmunityk}{a=,b=,c=,d=,e=,f=,g=,h=}

\newcommand*{\tfximmunityk}[1][]{\teffect{Immunity}:%
	\krdsetkeys{tfximmunityk}{#1}%
	\ifdefvoid{\ik@a}{}{\tstatus{\ik@a}}%
	\ifdefvoid{\ik@b}{}{, \tstatus{\ik@b}}%
	\ifdefvoid{\ik@c}{}{, \tstatus{\ik@c}}%
	\ifdefvoid{\ik@d}{}{, \tstatus{\ik@d}}%
	\ifdefvoid{\ik@e}{}{, \tstatus{\ik@e}}%
	\ifdefvoid{\ik@f}{}{, \tstatus{\ik@f}}%
	\ifdefvoid{\ik@g}{}{, \tstatus{\ik@g}}%
	\ifdefvoid{\ik@h}{}{, \tstatus{\ik@h}}%
}

\newcommand{\tfxcast}[1]{Casts \tspell{#1}}
\newcommand{\healhp}[1]{Heals #1 HP}
\newcommand{\healmp}[1]{Restores #1 MP}




% mob ranks
\newcommand{\tmob}[1]{\textbf{#1}}
\newcommand{\tmobmini}[1]{\tmob{Minion}}
\newcommand{\tmobcomm}[1]{\tmob{Common}}
\newcommand{\tmobleet}[1]{\tmob{Elite}}
\newcommand{\tmobboss}[1]{\tmob{Boss}}

% mob types
\newcommand{\tmtype}[1]{\textbf{#1}}
\newcommand{\tmtypeaberr}{\tmtype{Aberration}}
\newcommand{\tmtypeaqua}{\tmtype{Aquan}}
\newcommand{\tmtypeconstr}{\tmtype{Construct}}
\newcommand{\tmtypedemon}{\tmtype{Demon}}
\newcommand{\tmtypedrgn}{\tmtype{Dragon}}
\newcommand{\tmtypeelem}{\tmtype{Elemental}}
\newcommand{\tmtypebeast}{\tmtype{Beast}}
\newcommand{\tmtypehuman}{\tmtype{Humanoid}}
\newcommand{\tmtypeundead}{\tmtype{Undead}}
\newcommand{\tmtypeinvalid}{\tmtype{INVALID}}


% specific kinds of rules text
%\colorlet{rulebg}{gray!20}
%\newcommand{actionrule}[1]{
%	\sethlcolor{rulebg}\hl{
%		#1
%	}
%}

% parskip standard sizes
\newcommand{\pc}{\parskip 10pt}
\newcommand{\pw}{\parskip 15pt}

% Also, let's make define a nice minipage wrapper
\newenvironment{ffminipage}{%
  \noindent\begin{minipage}{\textwidth}%
}{%
  \end{minipage}\vspace{\parskip}%
}

% And one for two-column view
\newenvironment{ffcolpage}{%
  \noindent\begin{minipage}{\dimexpr 0.5\textwidth-0.5\columnsep}%
}{%
  \end{minipage}\vspace{\parskip}%
}

% for all choices
\krddefinekeys{jobchoice}[jc@]{bool/header;cmd/text;}
\krdpresetkeys{jobchoice}{header=true,text=Specialties}

\newenvironment*{jobchoice}[1][]{
	\krdsetkeys{jobchoice}{#1}
	\begin{tabular}{W{r}{\dimexpr 0.15\linewidth-2\tabcolsep}p{\dimexpr 0.8\linewidth-2\tabcolsep}}
		\ifjc@header%
			\textbf{\jc@text}:\\
		\fi%
} {
  \end{tabular}
}

% Beginnings of job choice rows

\krddefinekeys{abilitylede}[al@]{
	cmd/name;
	cmd/level;
}
\krdpresetkeys{abilitylede}{
	name=\review{invalid},level=\review{invalid}
}
\newcommand*{\abilitylede}[1][]{
	\krdsetkeys{abilitylede}{#1}%
	\tability{\al@name}: Core ability acquired at \ordinalnum{\al@level} level.%
}

\krddefinekeys{speclede}[sl@]{
	bool/isaction;
	cmd/name;
	cmd/level;
	cmd/earth;
	cmd/air;
	cmd/fire;
	cmd/water;
}
\krdpresetkeys{speclede}{
	isaction=false,name=\review{invalid};earth=;air=;fire=;water=
}
\newcommand*{\speclede}[1][]{%
	\krdsetkeys{speclede}{#1}%
	\ifdefvoid{\sl@level}{}{\ffcrystal[type=level,height=12pt]}%
	\ifdefvoid{\sl@earth}{}{\ffcrystal[type=earth,height=12pt]}%
	\ifdefvoid{\sl@air}{}{\ffcrystal[type=air,height=12pt]}%
	\ifdefvoid{\sl@fire}{}{\ffcrystal[type=fire,height=12pt]}%
	\ifdefvoid{\sl@water}{}{\ffcrystal[type=water,height=12pt]}%
	& 
	\krdsetkeys{speclede}{#1} %
	\ifsl@isaction%
		\taction{\sl@name}:
	\else%
		\tspec{\sl@name}:
	\fi%
	\ifblank{\sl@earth\sl@air\sl@fire\sl@water}{}{%
		Requires \begin{commalist}\ifdefvoid{\sl@earth}{}{\item Earth level \sl@earth}\ifdefvoid{\sl@air}{}{\item Air level \sl@air}\ifdefvoid{\sl@fire}{}{\item Fire level \sl@fire}\ifdefvoid{\sl@water}{}{\item Water level \sl@water}\end{commalist}.%
	}%
}


% Action Type Macro

\krddefinekeys{actype}[ac@]{
	choice/slow/quick/
		quick.do=\def\ac@slow{Quick},
		0.do=\def\ac@slow{Slow (0)},
		1.do=\def\ac@slow{Slow (1)},
		2.do=\def\ac@slow{Slow (2)},
		3.do=\def\ac@slow{Slow (3)},
		4.do=\def\ac@slow{Slow (4)},
		5.do=\def\ac@slow{Slow (5)},
		6.do=\def\ac@slow{Slow (6)},
		7.do=\def\ac@slow{Slow (7)},
		8.do=\def\ac@slow{Slow (8)},
		9.do=\def\ac@slow{Slow (9)},
		n.do=\def\ac@slow{Slow (n)};
	bool/reaction;
	bool/magical;
	bool/ranged;
	bool/free;
}
\krdpresetkeys{actype}{reaction=false,magical=false,ranged=false,free=false,slow=quick}

\newcommand*{\actype}[1][]{
	\krdsetkeys{actype}{#1}%
	\textit{%
		\ifac@ranged%
			Ranged
		\fi%
		\ifac@magical%
			Magical
		\fi%
		\ifac@free%
			Free
		\else%
		\ac@slow{}
		\fi%
	}%
	\ifac@reaction%
		reaction%
	\else%
		action%
	\fi%
}

\krddefinekeys{jobstats}[js@]{%
	cmd/lva/1;
	cmd/lvb/15;
	cmd/lvc/30;
	cmd/lvd/60;
	cmd/hpa/;
	cmd/hpb/;
	cmd/hpc/;
	cmd/hpd/;
	cmd/mpa/;
	cmd/mpb/;
	cmd/mpc/;
	cmd/mpd/;
	cmd/armor/;
	cmd/weapons/;
}
\krdpresetkeys{jobstats}{%
	lva=1,lvb=15,lvc=30,lvd=60,
	hpa=,hpb=,hpc=,hpd=,mpa=,mpb=,mpc=,mpd=,armor=,weapons=}

\newcommand*{\jobstats}[1][]{
	\krdsetkeys{jobstats}{#1}%
  \begin{center}
	\rowcolors{1}{zebragray}{}
	\begin{tabular}{cp{10mm}p{10mm}p{10mm}p{10mm}}
	  \toprule
			Level & \js@lva & \js@lvb & \js@lvc & \js@lvd \\ \midrule
			HP Bonus & \js@hpa & \js@hpb & \js@hpc & \js@hpd \\
			MP Bonus & \js@mpa & \js@mpb & \js@mpc & \js@mpd \\
			Armor   & \multicolumn{4}{l}{ \js@armor } \\
		Weapons & \multicolumn{4}{l}{\begin{tabular}{@{}l} \js@weapons \\ \end{tabular}} \\
	  \bottomrule
	\end{tabular}
  \end{center}
}

% mob stat block
\krddefinekeys{mobstats}[ms@]{%
	cmd/name/MOBNAME;
	cmd/level/-;
	choice/rank/common/
		minion.do=\let\ms@rank\tmobmini\let\ms@init2,
		common.do=\let\ms@rank\tmobcomm\let\ms@init3,
		elite.do=\let\ms@rank\tmobleet\let\ms@init4,
		boss.do=\let\ms@rank\tmobboss\let\ms@init5;
	choice/type/invalid/
		invalid.do=\let\ms@type\tmtypeinvalid,
		abberation.do=\let\ms@type\tmtypeaberr,
		aquatic.do=\let\ms@type\tmtypeaqua,
		construct.do=\let\ms@type\tmtypeconstr,
		demon.do=\let\ms@type\tmtypedemon,
		dragon.do=\let\ms@type\tmtypedrgn,
		elemental.do=\let\ms@type\tmtypeelem,
		beast.do=\let\ms@type\tmtypebeast,
		humanoid.do=\let\ms@type\tmtypehuman,
		undead.do=\let\ms@type\tmtypeundead;
	cmd/earth/-;
	cmd/air/-;
	cmd/fire/-;
	cmd/water/-;
	cmd/hp/-;
	cmd/mp/-;
	cmd/arm/-;
	cmd/marm/-;
	cmd/init/3;
}
\krdpresetkeys{mobstats}{%
	name=MOBNAME,level=-,rank=common,type=invalid,init=3,
	earth=-,air=-,fire=-,water=-,hp=-,mp=-,arm=-,marm=-
}

\newlength{\numwidth}
\settowidth{\numwidth}{0}

\newcommand{\mobstatrow}[1]{#1 \\}

\newenvironment*{mobstats}[1][] {%
	\krdsetkeys{mobstats}{#1}
	\bgroup\ferrum\large\itshape \ms@name\egroup \pc

	\rowcolors{1}{zebragray}{}%
	\begin{tabular*}{\textwidth}{p{\textwidth-2\tabcolsep}}
		\toprule
	% Icon stuff after hfill if we get there
		\mobstatrow{ \ordinalnum{\ms@level{}} Level \ms@rank{} \ms@type{} \hfill} \midrule
		\rowcolors{1}{}{zebragray}
		{\centering %
		\begin{tabular}{*{3}{r>{\collectcell\tabnumprint}p{5\numwidth}<{\endcollectcell}}}
			\textbf{Earth}: & \ms@earth & \textbf{Air}: & \ms@air & \textbf{HP}: & \ms@hp \\
			\textbf{Fire}: & \ms@fire & \textbf{Water}: & \ms@water & \textbf{MP}: & \ms@mp \\
			\textbf{ARM}: & \ms@arm & \textbf{MARM}: & \ms@marm & \textbf{Init}: & \ms@init \\
		\end{tabular} } \\ \midrule
} {
	\bottomrule
	\end{tabular*}\\[2mm]
}

% Define our options for the below
\krddefinekeys{jobdesc}[jd@]{%
  cmd/name/invalid;
}
\krdpresetkeys{jobdesc}{name=invalid}


% Display the job image, possibly the shadow
\newcommand{\jobimage}[1]{
	\parbox[right]{0.3\textwidth}{
		\adjincludegraphics[width=0.3\textwidth,trim={2.5in 0 0 0}]{#1}
	}
}

% And now, the 'standard' layout for job description
\newenvironment*{jobdesc}[1][]{%
	\krdsetkeys{jobdesc}{#1}
	\begin{minipage}[c]{0.65\textwidth}
}{
	\end{minipage}
	\jobimage{\jd@name}
}

% Display the quirk image, possibly the shadow
\newcommand{\quirkimage}[1]{
	\parbox[right]{0.15\textwidth}{
		\adjincludegraphics[width=0.15\textwidth]{#1}
	}
}

% Armor table
\krddefinekeys{tabarm}[ta@]{%
	cmd/label/undefined;
}
\krdpresetkeys{tabarm}{
	label=undefined
}

\newcommand{\fftabnumprint}[1]{\IfInteger{#1}{\numprint{#1}}{#1}}

\krddefinekeys{tabarmrow}[tar@]{%
	cmd/name/UNDEFINED;
	cmd/mlevel/1;
	cmd/cost/-;
	cmd/arm/-;
	cmd/marm/-;
	cmd/effect/None;
}

\krdpresetkeys{tabarmrow}{
	name=UNDEFINED,mlevel=-,cost=-,arm=-,marm=-,effect=UNDEFINED
}

\newenvironment*{tabarm}[1][]{%
	\krdsetkeys{tabarm}{#1}%
	\begin{table}[!htb]
		\centering
		\label{tab:\ta@label}
	    \rowcolors{1}{zebragray}{}
		\begin{tabular}{lrrrrp{0.35\textwidth}}
        		\toprule
        		\textbf{Name} & \multicolumn{1}{c}{\textbf{Level}} & \multicolumn{1}{c}{\textbf{Cost}} & \multicolumn{1}{c}{\textbf{ARM}} & \multicolumn{1}{c}{\textbf{MARM}} & \textbf{Effect} \\ \midrule
}{
			\bottomrule
		\end{tabular}
	\end{table}
}

\newcommand*{\tabarmrow}[1][]{%
  \krdsetkeys{tabarmrow}{#1}\tar@name & %
  \krdsetkeys{tabarmrow}{#1}\tabnumprint{\tar@mlevel} & %
  \krdsetkeys{tabarmrow}{#1}\tabnumprint{\tar@cost} & %
  \krdsetkeys{tabarmrow}{#1}\tabnumprint{\tar@arm} & %
  \krdsetkeys{tabarmrow}{#1}\tabnumprint{\tar@marm} & %
  \krdsetkeys{tabarmrow}{#1}\tar@effect \\
}

% Weapon table
\krddefinekeys{tabwpn}[tw@]{%
	cmd/label/undefined;
	cmd/roll/UNDEF;
	cmd/type/UNDEF;
	cmd/range/UNDEF;
	cmd/element/UNDEF;
}
\krdpresetkeys{tabwpn}{
	label=undefined,roll=UNDEF,type=UNDEF,range=UNDEF,element=UNDEF
}

\krddefinekeys{tabwpnrow}[twr@]{%
	cmd/name/UNDEFINED;
	cmd/mlevel/1;
	cmd/cost/-;
	cmd/damage/-;
	cmd/effect/None;
}
\krdpresetkeys{tabwpnrow}{
	name=UNDEFINED,mlevel=-,cost=-,damage=-,effect=UNDEFINED
}

\newenvironment*{tabwpn}[1][]{%
	\krdsetkeys{tabwpn}{#1}%
	\begin{table}[!htb]
		\centering
		\label{tab:\tw@label}
	    \rowcolors{1}{}{zebragray}
		\begin{tabular}{lrrrp{0.4\textwidth}}
				\toprule
%				\multicolumn{5}{l}{\tw@range \hspace{\stretch{1}} \tw@type \hspace{\stretch{1}} \tw@element \hfill \tw@roll} \\ \toprule
        		\textbf{Name} & \multicolumn{1}{c}{\textbf{Level}} & \multicolumn{1}{c}{\textbf{Cost}} & \multicolumn{1}{c}{\textbf{Damage}} & \textbf{Effect} \\ \midrule
}{
			\bottomrule
		\end{tabular}
	\end{table}
}

\newcommand*{\tabwpnrow}[1][]{%
  \krdsetkeys{tabwpnrow}{#1}\twr@name & %
  \krdsetkeys{tabwpnrow}{#1}\tabnumprint{\twr@mlevel} & %
  \krdsetkeys{tabwpnrow}{#1}\tabnumprint{\twr@cost} & %
  \krdsetkeys{tabwpnrow}{#1}\tabnumprint{\twr@damage} & %
  \krdsetkeys{tabwpnrow}{#1}\twr@effect \\
}

% Accessory table
\krddefinekeys{tabacc}[tc@]{%
	cmd/label/undefined;
}
\krdpresetkeys{tabacc}{
	label=undefined
}

\krddefinekeys{tabaccrow}[tcr@]{%
	cmd/name/UNDEFINED;
	cmd/mlevel/1;
	cmd/cost/-;
	cmd/effect/UNDEFINED;
}
\krdpresetkeys{tabaccrow}{
	name=UNDEFINED,mlevel=-,cost=-,effect=UNDEFINED
}

\newenvironment*{tabacc}[1][]{%
	\krdsetkeys{tabacc}{#1}%
	\label{tab:\tc@label}
    \rowcolors{1}{zebragray}{}
	\begin{longtable}[c]{lrrp{0.35\textwidth}}
		\toprule
		\textbf{Name} & \multicolumn{1}{c}{\textbf{Level}} & \multicolumn{1}{c}{\textbf{Cost}} & \textbf{Effect} \\ \midrule \endhead
		\bottomrule \endfoot
}{
	\end{longtable}
}

\newcommand*{\tabaccrow}[1][]{%
  \krdsetkeys{tabaccrow}{#1}\tcr@name & %
  \krdsetkeys{tabaccrow}{#1}\tabnumprint{\tcr@mlevel} & %
  \krdsetkeys{tabaccrow}{#1}\tabnumprint{\tcr@cost} & %
  \krdsetkeys{tabaccrow}{#1}\tcr@effect \\
}

% Item table
\krddefinekeys{tabitem}[ti@]{%
	cmd/label/undefined;
}
\krdpresetkeys{tabitem}{
	label=undefined
}

\krddefinekeys{tabitemrow}[tir@]{%
	cmd/name/UNDEFINED;
	cmd/cost/-;
	cmd/effect/UNDEFINED;
}
\krdpresetkeys{tabitemrow}{
	name=UNDEFINED,cost=-,effect=UNDEFINED
}

\newenvironment*{tabitem}[1][]{%
	\krdsetkeys{tabitem}{#1}%
	\label{tab:\ti@label}
    \rowcolors{1}{zebragray}{}
	\begin{longtable}[c]{lrp{0.5\textwidth}}
  		\toprule
		\textbf{Name} & \multicolumn{1}{c}{\textbf{Cost}} & \textbf{Effect} \\ \midrule \endhead
		\bottomrule \endfoot
}{
	\end{longtable}
}

\newcommand*{\tabitemrow}[1][]{%
  \krdsetkeys{tabitemrow}{#1}\tir@name & %
  \krdsetkeys{tabitemrow}{#1}\tabnumprint{\tir@cost} & %
  \krdsetkeys{tabitemrow}{#1}\tir@effect \\
}

% Column centered Boco, inherit existing columns
\newenvironment{boco}{
 	 \noindent\begin{minipage}[t]{\dimexpr 0.5\textwidth-\columnsep}
	 \par\medskip
	 \yumin
	 \begin{center}
	 \includegraphics[width=0.1\textwidth]{../img/common/boco}
	 \end{center}
	 \bgroup\color{bocoblue}\small%
	}
	{\egroup
	 \end{minipage}
	 \medskip}

% Used for page centered Boco but two column text
\newenvironment{multiboco}{
	 \par\medskip
	 \yumin
	 \begin{center}
	 \includegraphics[width=0.075\textwidth]{../img/common/boco}
	 \end{center}
	 \begin{multicols}{2}
	 \bgroup\color{bocoblue}\small%
	}
	{\egroup
	 \end{multicols}
	 \medskip}

% Column centered Mog, inherit existing columns
\newenvironment{mog}{
 	 \noindent\begin{minipage}[t]{\dimexpr 0.5\textwidth-\columnsep}
	 \par\medskip
	 \arabtype
	 \begin{center}
	 \includegraphics[width=0.1\textwidth]{../img/common/mog}
	 \end{center}
	 \bgroup\color{mogred}\Large%
	}
	{\egroup
	 \end{minipage}
	 \medskip}

% Page centered mog, two column text
\newenvironment{multimog}{
	 \par\medskip
	 \arabtype
	 \begin{center}
	 \includegraphics[width=0.075\textwidth]{../img/common/mog}
	 \end{center}
	 \begin{multicols}{2}
	 \bgroup\color{mogred}\Large%
	}
	{\egroup
	 \end{multicols}
	 \medskip}

% New job table format
\newenvironment{tabjob}{
	\begin{longtable}[c]{@{}rp{0.85\textwidth}@{}}
		\multicolumn{2}{c}{\textbf{Abilities}} \\ \midrule \endfirsthead%
		\bottomrule \endlastfoot%
} {
	\end{longtable}
	\clearpage
}

% Commands for the tabjob table format
\newcommand{\tabjobspec}{\multicolumn{2}{l}{\textbf{Specialties:}} \tabularnewline \nopagebreak}
\newcommand{\tabjobsep}{%
	\addlinespace[6pt]
	\midrule
	\\[-6pt]%
}

% Change layout of headrule
\setlength{\headheight}{14pt}
\renewcommand{\headrule}{}

% Get all our header/footers done
\pagestyle{fancy}{%
\renewcommand{\chaptermark}[1]{\markboth{#1}{}}
  \fancyhf{}
  \fancyfoot[C]{%
	\ffcrystal[type=earth] \hspace{\stretch{1}} %
	\ffcrystal[type=air] \hspace{\stretch{1}} %
	{\large\color{bocoblue}\ferrum{}Page \thepage} \hspace{\stretch{1}} %
	\ffcrystal[type=fire] \hspace{\stretch{1}} %
	\ffcrystal[type=water]
  }
  \fancyhead[R]{%
	{\color{mogred}\dotfill} \textbf{PRERELEASE  \datestamp{} - \leftmark{}}
  }
}

% And headers/footers for the chapter pages
\fancypagestyle{plain}{%
  \fancyhf{}
  \fancyfoot[C]{%
    \hspace{\stretch{1}} %
	\ffcrystal[type=earth] \hspace{\stretch{1}} %
	\ffcrystal[type=air] \hspace{\stretch{1}} %
	{\large\color{bocoblue}\ferrum{}Chapter \thechapter} \hspace{\stretch{1}} %
	\ffcrystal[type=fire] \hspace{\stretch{1}} %
	\ffcrystal[type=water] \hspace{\stretch{1}}
  }
  \fancyhead[R]{%
	{\color{mogred}\dotfill} \textbf{PRERELEASE  \datestamp{}}
  }
}

% Alright, let's set appropriate section layouts
\titleformat{\chapter}{\ferrum\huge\bfseries\itshape\centering}{\thechapter}{1em}{}
\titleformat{\section}{\ferrum\LARGE\itshape\centering}{\thesection}{1em}{}
\titleformat{\subsection}{\ferrum\Large\upshape\centering}{\thesubsection}{1em}{}
\titleformat{\subsubsection}{\ferrum\large\itshape}{\thesubsubsection}{1em}{}

% ToC customization
\addtocontents{toc}{~\hfill\ferrum\protect\textbf{Page}\par\rmfamily}
\addtocontents{toc}{\protect\thispagestyle{fancy}}
\patchcmd\@dottedtocline{\hfil}{\hss}{}{}

% Return @ processing to normal
\makeatother

\endinput
